{
  "name": "ledgerconsensus",
  "prefix": "(\\d{4}-[A-Z][a-z][a-z]-\\d{2}\\s\\d{2}\\:\\d{2}\\:\\d{2}\\.\\d{9})\\sLedgerConsensus\\:",
  "isRegex": true,
  "children": [
    {
      "name": "Error",
      "prefix": "ERR ",
      "isRegex": false,
      "children": [
        {
          "name": "BowingOutExpiredValidatorList",
          "prefix": "Voluntarily bowing out of consensus process because of an expired validator list.",
          "isRegex": false,
          "children": []
        }
      ]
    },
    {
      "name": "Warning",
      "prefix": "WRN ",
      "isRegex": false,
      "children": [
        {
          "name": "NeedConsensusLedger",
          "prefix": "(Need\\sconsensus\\sledger\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "GotButNoLongerProposing",
          "prefix": "(By\\sthe\\stime\\swe\\sgot\\s[A-Z0-9]{64}\\sno\\speers\\swere\\sproposing\\sit)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "ViewOfConsensusChanged",
          "prefix": "(View\\sof\\sconsensus\\schanged\\sduring\\s(open|close|establish|accept|consensus)\\sstatus\\=(open|close|establish|accept|consensus)\\,\\s+mode\\=(proposing|observing|switchedLedger|wrongLedger))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TransactionWarningObj",
          "prefix": "({\\\"accepted\\\":(true|false),\\\"account_hash\\\":\\\"([A-Z0-9]{64})\\\",\\\"close_flags\\\":(\\d+),\\\"close_time\\\":(\\d+),(.*))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "HashToHash",
          "prefix": "(([A-Z0-9]{64})\\sto\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "ValWarning",
          "prefix": "(Val|New):\\s\\d+\\s[A-Z0-9]+",
          "isRegex": true,
          "children": []
        },
        {
          "name": "NotValidatingIncompatible",
          "prefix": "Not validating incompatible following ledger",
          "isRegex": false,
          "children": []
        },
        {
          "name": "RemovingStaleProposal",
          "prefix": "(Removing\\sstale\\sproposal\\sfrom\\s([A-Z0-9]{40}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "HashVSeq",
          "prefix": "(Hash\\(VSeq\\):\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        }
      ]
    },
    {
      "name": "Debug",
      "prefix": "DBG ",
      "isRegex": false,
      "children": [
        {
          "name": "Report",
          "prefix": "Report: ",
          "isRegex": false,
          "children": [
            {
              "name": "PropValCorFail",
              "prefix": "(Prop=(yes|no)\\sval=(yes|no)\\scorLCL=(yes|no)\\sfail=(yes|no))",
              "isRegex": true,
              "children": []
            },
            {
              "name": "TransactionSetClose",
              "prefix": "(Transaction\\sSet\\s\\=\\s[A-Z0-9]{64}\\,\\sclose\\s([0-9]{9}))",
              "isRegex": true,
              "children": []
            },
            {
              "name": "PrevHash",
              "prefix": "(Prev\\s=\\s([A-Z0-9]{64}):(\\d+))",
              "isRegex": true,
              "children": []
            }
          ]
        },
        {
          "name": "Pass",
          "prefix": "Pass: ",
          "isRegex": false,
          "children": [
            {
              "name": "PassBegins",
              "prefix": "((\\d+)\\sbegins\\s\\((\\d+)\\stransactions\\))",
              "isRegex": true,
              "children": []
            },
            {
              "name": "PassCompleted",
              "prefix": "((\\d+)\\scompleted\\s\\((\\d+)\\schanges\\))",
              "isRegex": true,
              "children": []
            }
          ]
        },
        {
          "name": "FinalPass",
          "prefix": "Final pass: ",
          "isRegex": false,
          "children": [
            {
              "name": "FinalPassBegins",
              "prefix": "((\\d+)\\sbegins\\s\\((\\d+)\\stransactions\\))",
              "isRegex": true,
              "children": []
            },
            {
              "name": "FinalPassCompleted",
              "prefix": "((\\d+)\\scompleted\\s\\((\\d+)\\schanges\\))",
              "isRegex": true,
              "children": []
            }
          ]
        },
        {
          "name": "Taker",
          "prefix": "Taker ",
          "isRegex": false,
          "children": [
            {
              "name": "TakerCrossing",
              "prefix": "(Crossing\\sas\\:\\s([A-Za-z0-9]+))",
              "isRegex": true,
              "children": []
            },
            {
              "name": "TakerOfferIn",
              "prefix": "(\\s+)Offer\\sin\\:\\s(\\d+)((\\.(\\d+))?)\\/([A-Z]{3})",
              "isRegex": true,
              "children": []
            },
            {
              "name": "TakerOfferOut",
              "prefix": "(\\s+)Offer\\sout\\:\\s(\\d+)((\\.(\\d+))?)\\/([A-Z]{3})((\\s\\(issuer\\:\\s([A-Za-z0-9]+)\\))?)",
              "isRegex": true,
              "children": []
            },
            {
              "name": "TakerBalance",
              "prefix": "(\\s+)Balance\\:\\s(\\d+)((\\.(\\d+))?)\\/([A-Z]{3})",
              "isRegex": true,
              "children": []
            }
          ]
        },
        {
          "name": "Vote",
          "prefix": "(Peer\\s[A-Z0-9]{40}\\svotes\\s(YES|NO)\\son\\s[A-Z0-9]{64})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "NoCTConsensus",
          "prefix": "(No\\sCT\\sconsensus\\:\\sProposers\\:(\\d+)\\sMode\\:(proposing|observing|switchedLedger|wrongLedger)\\sThresh\\:(\\d+)\\sPos\\:\\d+)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "CCTimeSeq",
          "prefix": "(CCTime:\\sseq\\s([0-9]+\\:\\s[0-9]+\\shas\\s[0-9]+\\,\\s[0-9]+\\srequired))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "FinalResult",
          "prefix": "(final\\sresult\\:\\s([a-z]+))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "AttemptingCross",
          "prefix": "(Attempting\\scross\\:\\s((([A-Za-z0-9]+\\/)?)[A-Z]{3}\\s\\-\\>\\s(([A-Za-z0-9]+\\/)?)[A-Z]{3}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "VoteCount",
          "prefix": "(\\{\\\"nays\\\"\\:(\\d+)\\,\\\"our\\_vote\\\"\\:(true|false)\\,\\\"votes\\\"\\:\\{((\\\"[A-Z0-9]{40}\\\"\\:(true|false)(\\,?))+))\\}\\,\\\"yays\\\"\\:(\\d+)\\}",
          "isRegex": true,
          "children": []
        },
        {
          "name": "AttemptingCross",
          "prefix": "Attempting\\scross\\:\\s[A-Z]{3}\\s\\-\\>\\s[A-Za-z0-9]+\\/[A-Z]{3}",
          "isRegex": true,
          "children": []
        },
        {
          "name": "CreateCancelsOrder",
          "prefix": "(Create\\scancels\\sorder\\s[0-9]+)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TransactionAppliedFinalInValidatedLedger",
          "prefix": "Transaction applied: The transaction was applied. Only final in a validated ledger.",
          "isRegex": false,
          "children": []
        },
        {
          "name": "RelayingDisputedTx",
          "prefix": "(Relaying\\sdisputed\\stx\\s[A-Z0-9]{64})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "EnteringRippleCalcInPayment",
          "prefix": "Entering\\sRippleCalc\\sin\\spayment:\\s([A-Z0-9]+)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "HashHasHash",
          "prefix": "([A-Z0-9]+\\shas\\s[A-Z0-9]+)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TXNFinal",
          "prefix": "((TXN)\\s[A-Z0-9]{64}\\/final)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "BuildingCanonicalSet",
          "prefix": "(Building\\scanonical\\stx\\sset\\:\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TXN_Retry",
          "prefix": "TXN\\s[A-Z0-9]{64}\/retry",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TXN_Final",
          "prefix": "TXN\\s[A-Z0-9]{64}\/final",
          "isRegex": true,
          "children": []
        },
        {
          "name": "transaction_retry_path_could_not_send_partial",
          "prefix": "Transaction retry: Path could not send partial amount.",
          "isRegex": false,
          "children": []
        },
        {
          "name": "transaction_retry_source_account_does_not_exist",
          "prefix": "Transaction retry: The source account does not exist",
          "isRegex": false,
          "children": []
        },
        {
          "name": "transaction_retry_path_could_not_send_partial",
          "prefix": "Transaction applied: Path could not send partial amount.",
          "isRegex": false,
          "children": []
        },
        {
          "name": "CreateDisputes",
          "prefix": "createDisputes\\s[A-Z0-9]{64}\\sto\\s[A-Z0-9]{64}",
          "isRegex": true,
          "children": []
        },
        {
          "name": "DifferencesFound",
          "prefix": "\\d+\\sdifferences\\sfound",
          "isRegex": true,
          "children": []
        },
        {
          "name": "NotCreateDisputesNoPosition",
          "prefix": "Not creating disputes: no position yet.",
          "isRegex": false,
          "children": []
        },
        {
          "name": "TxHash",
          "prefix": "(\\s+(Tx)\\:\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TxIsDisputed",
          "prefix": "(Transaction\\s([A-Z0-9]{64})\\sis\\sdisputed)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "GotProposalButDiff",
          "prefix": "(Got\\sproposal\\sfor\\s[A-Z0-9]{64}\\sbut\\swe\\sare\\son\\s[A-Z0-9]{64})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "PeerNowVotes",
          "prefix": "(Peer\\s([A-Z0-9]{40})\\snow\\svotes\\s(YES|NO)\\son\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "WeNowVote",
          "prefix": "(We\\snow\\svote\\s(YES|NO)\\son\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "ConsensusBuildLedgerAlreadyPresent",
          "prefix": "Consensus built ledger we already had",
          "isRegex": false,
          "children": []
        },
        {
          "name": "ConsensusLedgerFullyValidated",
          "prefix": "Consensus ledger fully validated",
          "isRegex": false,
          "children": []
        },
        {
          "name": "ConsensusBuiltLedgerAcquiring",
          "prefix": "Consensus built ledger we were acquiring",
          "isRegex": false,
          "children": []
        },
        {
          "name": "TryToCancel",
          "prefix": "Trying\\sto\\scancel\\soffer\\s\\#[\\d+]",
          "isRegex": true,
          "children": []
        },
        {
          "name": "BuildingCanonicalTxSet",
          "prefix": "Building\\sCanonical\\stx\\sset:\\s[A-Z0-9]+",
          "isRegex": true,
          "children": []
        },
        {
          "name": "NotRelayingDisputedTx",
          "prefix": "Not\\srelaying\\sdisputed\\stx\\s[A-Z0-9]{64}",
          "isRegex": true,
          "children": []
        },
        {
          "name": "DisputedTransaction",
          "prefix": "(Test\\sapplying\\sdisputed\\stransaction\\sthat\\sdid\\snot\\sget\\sin\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "Don't have tx set for peer",
          "prefix": "Don't have tx set for peer",
          "isRegex": false,
          "children": []
        },
        {
          "name": "NotPausing",
          "prefix": "not\\spausing\\s\\(.*\\)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "NormalConsensus",
          "prefix": "normal consensus",
          "isRegex": false,
          "children": []
        },
        {
          "name": "CheckingTXConsensus",
          "prefix": "(Checking\\sfor\\sTX\\sconsensus:\\sagree=(\\d+),\\sdisagree=(\\d+))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "AttemptApplyTransactions",
          "prefix": "(Attempting\\sto\\sapply\\s(\\d+)\\stransactions)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "AppliedTransactions",
          "prefix": "(Applied\\s(\\d+)\\stransactions((\\.)|(\\;\\s(\\d+)\\sfailed\\sand\\s(\\d+)\\swill\\sbe\\sretried\\.)))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "ConsensusBuiltLedger",
          "prefix": "Consensus built new ledger",
          "isRegex": false,
          "children": []
        },
        {
          "name": "FlushedAccounts",
          "prefix": "(Flushed\\s(\\d+)\\saccounts\\sand\\s(\\d+)\\stransaction\\snodes)",
          "isRegex": true,
          "children": []
        },
        {
          "name": "BuiltLedger",
          "prefix": "(Built\\sledger\\s#(\\d+):\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "SeqSupportObj",
          "prefix": "({\\\"seq\\_support\\\":{(.*)},\\\"trie\":{(.*)})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "ConsensusTriggeredCheck",
          "prefix": "Consensus triggered check of ledger",
          "isRegex": false,
          "children": []
        },
        {
          "name": "StateOnConsensusChange",
          "prefix": "(State\\son\\sconsensus\\schange\\s{(.*)})",
          "isRegex": true,
          "children": []
        }
      ]
    },
    {
      "name": "Info",
      "prefix": "NFO ",
      "isRegex": false,
      "children": [
        {
          "name": "Closed",
          "prefix": "(We\\sclosed\\sat\\s\\d{9})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "CloseOffer",
          "prefix": "(Our\\sclose\\soffset\\sis\\sestimated\\sat\\s((\\-?)\\d+)\\s\\(\\d+\\))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "EnteringConsensus",
          "prefix": "(Entering\\sconsensus\\sprocess,\\s(validating|watching),\\ssynced=(yes|no))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "BowingOutOfConsensus",
          "prefix": "Bowing out of consensus",
          "isRegex": false,
          "children": []
        },
        {
          "name": "Consensus mode change",
          "prefix": "(Consensus\\smode\\schange\\sbefore\\=(proposing|observing|switchedLedger|wrongLedger)\\,\\safter\\=(proposing|observing|switchedLedger|wrongLedger))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "ConvergenceCutoff",
          "prefix": "(Converge\\scutoff\\s\\((\\d+)\\sparticipants\\))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "CNF",
          "prefix": "CNF ",
          "isRegex": false,
          "children": [
            {
              "name": "CNFValue",
              "prefix": "Val\\s[A-Z0-9]{64}",
              "isRegex": true,
              "children": []
            },
            {
              "name": "CNFBuild",
              "prefix": "buildLCL\\s[A-Z0-9]{64}",
              "isRegex": true,
              "children": []
            }
          ]
        },
        {
          "name": "Proposers",
          "prefix": "(Proposers:(\\d+)\\snw:(\\d+)\\sthrV:(\\d+)\\sthrC:(\\d+))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "PositionChange",
          "prefix": "(Position\\schange:\\sCTime\\s(\\d{9}),\\stx\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "NoChange",
          "prefix": "(No\\schange\\s\\((YES|NO)\\)\\s\\:\\sweight\\s(\\-?)\\d{1,2}\\,\\spercent\\s\\d{1,2})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TimeVotes",
          "prefix": "\\d+\\stime\\svotes\\sfor\\s\\d+",
          "isRegex": true,
          "children": []
        },
        {
          "name": "EnteringConsensus",
          "prefix": "(Entering\\sconsensus\\swith:\\s([A-Z0-9]{64}))",
          "isRegex": true,
          "children": []
        },
        {
          "name": "CorrectLCL",
          "prefix": "Correct\\sLCL\\sis:\\s([A-Z0-9]{64})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "HaveConsensusLedger",
          "prefix": "Have\\sthe\\sconsensus\\sledger\\s([A-Z0-9]{64})",
          "isRegex": true,
          "children": []
        },
        {
          "name": "TXConsensusNotCTConsensus",
          "prefix": "We have TX consensus but not CT consensus",
          "isRegex": false,
          "children": []
        },
        {
          "name": "ConsensusBuiltOldLedger",
          "prefix": "Consensus\\sbuilt\\sold\\sledger:\\s(\\d+)\\s\\<=\\s(\\d+)",
          "isRegex": true,
          "children": []
        }
      ]
    }
  ]
}

